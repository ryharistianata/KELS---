#include <iostream>
#include <cstdlib>
#include <conio.h>
#include <fstream>
#include <vector>
#include <ctime>
#include <ncurses/curses.h>
#include <iomanip> //setw
#include <windows.h>  // Windows API

using namespace std;

//============================================================== gamee
void ULER()
{
    const int lebar = 50;
    const int tinggi = 30;
    int skor = 0;
    int skorTertinggi = 0;

    int x, y, xMakanan, yMakanan, xEkor[100], yEkor[100];
    int jumlahEkor;
    bool permainanSelesai;
    enum Arah { BERHENTI = 0, KIRI, KANAN, ATAS, BAWAH};
    Arah arah;

    srand(time(0));
    permainanSelesai = false;
    arah = BERHENTI;
    x = lebar / 2;
    y = tinggi / 2;
    xMakanan = rand() % lebar;
    yMakanan = rand() % tinggi;
    skor = 0;
    jumlahEkor = 0;

    while (!permainanSelesai)
    {
        system("cls");

        for (int i = 0; i < lebar + 2; i++)
            cout << "\033[1;34m#\033[0m";

        cout << endl;

        for (int i = 0; i < tinggi; i++)
        {
            for (int j = 0; j < lebar; j++)
            {
                if (j == 0 || j == lebar - 1)
                    cout << "\033[1;34m#\033[0m";
                else if (i == y && j == x)
                {
                    if (arah == ATAS)
                        cout << "\033[1;32m^\033[0m";
                    else if (arah == BAWAH)
                        cout << "\033[1;32mv\033[0m";
                    else if (arah == KIRI)
                        cout << "\033[1;32m<\033[0m";
                    else if (arah == KANAN)
                        cout << "\033[1;32m>\033[0m";
                }
                else if (i == yMakanan && j == xMakanan)
                    cout << "\033[1;33m*\033[0m";
                else
                {
                    bool cetak = false;
                    for (int k = 0; k < jumlahEkor; k++)
                    {
                        if (xEkor[k] == j && yEkor[k] == i)
                        {
                            cout << "\033[1;32m#\033[0m";
                            cetak = true;
                        }
                    }
                    if (!cetak)
                        cout << " ";
                }
            }
            cout << endl;
        }

        for (int i = 0; i < lebar + 2; i++)
            cout << "\033[1;34m#\033[0m";

        cout << endl;
        cout << "Skor: " << skor << "  Skor Tertinggi: " << skorTertinggi << endl;

        if (_kbhit())
        {
            switch (_getch())
            {
            case 'a': arah = KIRI; break;
            case 'd': arah = KANAN; break;
            case 'w': arah = ATAS; break;
            case 's': arah = BAWAH; break;
            case 'x': permainanSelesai = true; break;
            }
        }

        int xSebelumnya = xEkor[0];
        int ySebelumnya = yEkor[0];
        int xSebelumnya2, ySebelumnya2;
        xEkor[0] = x;
        yEkor[0] = y;

        for (int i = 1; i < jumlahEkor; i++)
        {
            xSebelumnya2 = xEkor[i];
            ySebelumnya2 = yEkor[i];
            xEkor[i] = xSebelumnya;
            yEkor[i] = ySebelumnya;
            xSebelumnya = xSebelumnya2;
            ySebelumnya = ySebelumnya2;
        }

        switch (arah)
        {
        case KIRI: x--; break;
        case KANAN: x++; break;
        case ATAS: y--; break;
        case BAWAH: y++; break;
        default: break;
        }

        if (x >= lebar) x = 0; else if (x < 0) x = lebar - 1;
        if (y >= tinggi) y = 0; else if (y < 0) y = tinggi - 1;

        for (int i = 0; i < jumlahEkor; i++)
            if (xEkor[i] == x && yEkor[i] == y)
                permainanSelesai = true;

        if (x == xMakanan && y == yMakanan)
        {
            skor += 10;
            jumlahEkor++;
            xMakanan = rand() % lebar;
            yMakanan = rand() % tinggi;

            if (skor > skorTertinggi)
                skorTertinggi = skor;
        }

        Sleep(100);
    }
}

//==========================================================================

//============
void LOAD(){
    initscr();

    curs_set(0);
    
    string loading = "=== || LOADING ||                   ";

    for(int i = 0; i < 27; i++){
        mvprintw(2,i, "=");
        mvprintw(3,i + 5, "%c", loading[i]);
        mvprintw(4,i + 2, "===");
        mvprintw(5,i + 5, "%c", loading[i]); 
        mvprintw(6,i, "=");

        refresh();
        Sleep(100);
    }

    for(int i = 1; i <= 100; i++){
        mvprintw(3, 23, "%d", i);
        mvprintw(5, 23, "%d", i);
        mvprintw(3, 26, "%%");
        mvprintw(5, 26, "%%");
        refresh();
        Sleep(50);
    }

    clear();
    curs_set(1);
    endwin();
}

void setColor(int color) {
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);
}

void showHeader() {
    setColor(14);
    cout << "              !! Welcome to the Game !! \n";
    cout << "================================================\n";
    setColor(15);
}

void typeText(const string& text, int delay = 40) {
    for (char ch : text) {
        cout << ch;
        Sleep(delay);
    }
    cout << endl;
}

bool hasSpace(const string& str) {
    for (char c : str) {
        if (c == ' ') {
            return true;
        }
    }
    return false;
}

void mainMenu();

void registerPage() {
    string nickname, password;
    ofstream myfile;

    system("cls");
    showHeader();
    typeText("Dear Player, Let's create your epic game account!!\n", 40);

    setColor(15);
    do {
        cout << "Enter your game Nickname (no spaces allowed): ";
        getline(cin, nickname);

        if (hasSpace(nickname)) {
            setColor(12);
            typeText("Error: Nickname cannot contain spaces. Please try again...\n", 20);
        }
    } while (hasSpace(nickname));

    setColor(15);
    do {
        cout << "Create a strong Password (min 6 chars): ";
        cin >> password;

        if (password.length() < 6) {
            setColor(12);
            typeText("Password too short! Please try again...\n", 30);
        }
    } while (password.length() < 6);

    myfile.open("game_register.txt", ios::app);
    if (myfile.is_open()) {
        myfile << "Nickname: " << nickname << endl;
        myfile << "Password: " << password << endl;
        myfile << "=============================\n";
        myfile.close();

        setColor(14);
        typeText("\nRegistration success!!\n", 40);

        char choice;
        do {
            cout << "\nDo you want to return to the main menu? (y/n): ";
            cin >> choice;
            cin.ignore();

            if (choice == 'y' || choice == 'Y') {
                mainMenu();
                return;
            } else if (choice == 'n' || choice == 'N') {
                typeText("Okay! You can now proceed to login.\n", 40);
                return;
            } else {
                setColor(12);
                typeText("Invalid choice! Please choose 'y' or 'n'.\n", 40);
            }
        } while (true);
    } else {
        setColor(12);
        typeText("Error saving data! Please try again later.\n", 40);
    }
}

void loginPage() {
    string nickname, password, storedNickname, storedPassword, line;
    bool loginSuccess = false;

    system("cls");
    setColor(14);
    cout << "=====================================\n";
    cout << "      Let's login to your account    \n";
    cout << "=====================================\n";
    setColor(15);

    do {
        cout << "Enter your game Nickname: ";
        cin >> nickname;
        cout << "Enter your Password: ";
        cin >> password;

        ifstream myfile("game_register.txt");
        if (myfile.is_open()) {
            while (getline(myfile, line)) {
                if (line.find("Nickname: ") != string::npos) {
                    storedNickname = line.substr(10);
                }
                if (line.find("Password: ") != string::npos) {
                    storedPassword = line.substr(10);
                }

                if (storedNickname == nickname && storedPassword == password) {
                    loginSuccess = true;
                    break;
                }
            }
            myfile.close();
        }

        if (loginSuccess) {
            setColor(14);
            typeText("\nLogin successful! Welcome to the game!!\n", 40);
            typeText("Game is starting...\n", 40);
            
            system ("cls");
            LOAD ();
            
            system("cls");
            ULER();
            
        } else {
            setColor(12);
            typeText("\nInvalid nickname or password. Please try again.\n", 30);

            char choice;
            cout << "\nDo you want to register a new account? (y/n): ";
            cin >> choice;

            if (choice == 'y' || choice == 'Y') {
                cin.ignore(); 
                registerPage();
                return;  
            } else if (choice == 'n' || choice == 'N') {
                cout << "Returning to main menu...\n";
                return; 
            } else {
                setColor(12);
                typeText("Invalid choice! Please choose 'y' or 'n'.\n", 40);
            }
        }
    } while (!loginSuccess);
}

void mainMenu() {
    int choice;

    system("cls");  
    showHeader();
    typeText("Welcome to the Game, do you want to?\n", 40);
    typeText("1. Login\n", 40);
    typeText("2. Register\n", 40);
    typeText("3. Exit\n", 40);
    cout << "Choose an option (1, 2 or 3): ";
    cin >> choice;
    cin.ignore(); 

    switch (choice) {
        case 1:
            cout << "You chose Login.\n";
            loginPage();  
            break;
        case 2:
            cout << "You chose Register.\n";
            registerPage();  
            break;
        case 3:
            cout << "Exiting the program.\n";
            exit(0);
            break;
        default:
            setColor(12);
            typeText("Invalid choice! Please choose 1, 2 or 3.\n", 40);
            mainMenu();  
    }
}


void resetColor() {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, 7); 
}
